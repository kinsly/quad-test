{
	"info": {
		"_postman_id": "0d5e6144-12f3-41b5-9146-e0bbd7655503",
		"name": "Quad Test",
		"description": "## ðŸ”– About\n\n- Here I am using Sanctum tokens to authenticate requests to the API. Should pass the token in the Authorization header as a Bearer token.\n    \n- **Bearer Token - Automatically sets when admin or client login using scripts. No need to manually set bearer token.**\n    \n- Make sure to import _**postman collection json**_ file to get all the api requests with scripts and required credentials.\n    \n\n## ðŸ”– Create Products\n\n- Make sure to run db:seed artisan command to create default admin user.\n    \n- Run \"Admin Login\".\n    \n- Go to Products collection and run \"Create Product\"\n    \n\n## ðŸ”– Create Client User\n\n- Make sure to run db:seed artisan command to set user roles that is used when registering a new user.\n    \n- Go to \"User - Client\" collection and run register\n    \n\n## ðŸ”– Create Orders\n\n- Make sure to have created product and a client using above mention requests.\n    \n- Make sure to login as a client\n    \n- Go to \"Orders - Client\" and run \"Place order\" to place a order.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "321583"
	},
	"item": [
		{
			"name": "Products - CRUD",
			"item": [
				{
					"name": "List all products",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "localhost:8000/api/products",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"products"
							]
						},
						"description": "List all created products by admin and clients"
					},
					"response": []
				},
				{
					"name": "Create Product",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "First Product Item",
									"type": "text"
								},
								{
									"key": "price",
									"value": "12.2",
									"type": "text"
								},
								{
									"key": "description",
									"value": "Product item description",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "localhost:8000/api/products",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"products"
							]
						},
						"description": "Create a new product item"
					},
					"response": []
				},
				{
					"name": "Read Product",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "localhost:8000/api/products/1",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"products",
								"1"
							]
						},
						"description": "Show details of the selected product"
					},
					"response": []
				},
				{
					"name": "Update Product",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "name",
									"value": "First product is updated",
									"type": "text"
								},
								{
									"key": "price",
									"value": "100.00",
									"type": "text"
								},
								{
									"key": "description",
									"value": "Newly updated product information",
									"type": "text"
								},
								{
									"key": "_method",
									"value": "put",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "localhost:8000/api/products/1",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"products",
								"1"
							]
						},
						"description": "Update select product details"
					},
					"response": []
				},
				{
					"name": "Delete Product",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "_method",
									"value": "delete",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "localhost:8000/api/products/1",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"products",
								"1"
							]
						},
						"description": "Delete select product from database."
					},
					"response": []
				}
			],
			"description": "CRUD operations for products. Only Admins can use this API collection except listing products where both admins and clients have permissions. Admin creation is prohibited in this API. Use default Admin login that comes with this repository."
		},
		{
			"name": "User- Client",
			"item": [
				{
					"name": "Client Register",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Extract the token from the response\r",
									"var jsonData = pm.response.json();\r",
									"var token = jsonData['access-token'];\r",
									"\r",
									"// Set Collection Varilable XSRF-TOKEN to access all other request\r",
									"pm.collectionVariables.set('ACCESS-TOKEN', token);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "client one",
									"type": "text"
								},
								{
									"key": "email",
									"value": "client@mail.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "password",
									"type": "text"
								},
								{
									"key": "password_confirmation",
									"value": "password",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "localhost:8000/api/register",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"register"
							]
						},
						"description": "Register new user (client)"
					},
					"response": []
				},
				{
					"name": "Client Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Extract the token from the response\r",
									"var jsonData = pm.response.json();\r",
									"var token = jsonData['access-token'];\r",
									"\r",
									"// Set Collection Varilable XSRF-TOKEN to access all other request\r",
									"pm.collectionVariables.set('ACCESS-TOKEN', token);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "email",
									"value": "client@mail.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "password",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "localhost:8000/api/login",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"login"
							]
						},
						"description": "Client login with credentials"
					},
					"response": []
				}
			],
			"description": "Here you can create a new user of type \"client\" role."
		},
		{
			"name": "Orders - Client",
			"item": [
				{
					"name": "Place Order",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "product_id",
									"value": "1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "localhost:8000/api/orders",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"orders"
							]
						},
						"description": "Place your order"
					},
					"response": []
				},
				{
					"name": "Remove Order",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "_method",
									"value": "delete",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "localhost:8000/api/orders/1",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"orders",
								"1"
							]
						},
						"description": "Remove order by client"
					},
					"response": []
				}
			],
			"description": "Only clients can place orders. Make sure to create a new client before creating a order."
		},
		{
			"name": "Profile",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:8000/api/user",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"user"
					]
				},
				"description": "Get logged in users profile information."
			},
			"response": []
		},
		{
			"name": "Admin Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Extract the token from the response\r",
							"var jsonData = pm.response.json();\r",
							"var token = jsonData['access-token'];\r",
							"\r",
							"// Set Collection Varilable XSRF-TOKEN to access all other request\r",
							"pm.collectionVariables.set('ACCESS-TOKEN', token);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "email",
							"value": "admin@mail.com",
							"type": "text"
						},
						{
							"key": "password",
							"value": "password",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "localhost:8000/api/login",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"login"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{ACCESS-TOKEN}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "ACCESS-TOKEN",
			"value": "empty"
		}
	]
}